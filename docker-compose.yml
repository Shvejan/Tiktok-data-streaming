version: "3.8"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "bash", "-c", "echo 'ruok' | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:RELEASE.2020-10-18T21-54-12Z
    command: ["server", "/export"]
    environment:
      - MINIO_ACCESS_KEY=minioaccesskey
      - MINIO_SECRET_KEY=miniosecretkey
    healthcheck:
      disable: true
    ports:
      - 8050:9000
    volumes:
      - ./volumes/minio:/export

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
      - "9092:9092"
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "bash", "-c", "nc -z localhost 9092"]
      interval: 10s
      timeout: 5s
      retries: 5

  scraper:
    build: .
    depends_on:
      zookeeper:
        condition: service_healthy
      broker:
        condition: service_healthy

  kafka-consumer:
    build:
      context: ./kafka-consumer
    depends_on:
      zookeeper:
        condition: service_healthy
      broker:
        condition: service_healthy

  spark-job-scheduler:
    build:
      context: ./spark-jobs
    depends_on:
      zookeeper:
        condition: service_healthy
      broker:
        condition: service_healthy
